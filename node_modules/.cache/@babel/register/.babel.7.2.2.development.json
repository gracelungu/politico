{
  "{\"sourceRoot\":\"/Volumes/Extension/projects/politico\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Volumes/Extension/projects/politico\",\"filename\":\"/Volumes/Extension/projects/politico/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/Extension/projects/politico\",\"plugins\":[],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/Extension/projects/politico",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Volumes/Extension/projects/politico",
      "filename": "/Volumes/Extension/projects/politico/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/Extension/projects/politico",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/Extension/projects/politico/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/Extension/projects/politico/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/Extension/projects/politico",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "// External modules\nconst express = require('express');\n\nconst bodyParser = require('body-parser'); // Internal modules\n\n\nconst partyController = require('./V1/routes/party');\n\nconst officeController = require('./V1/routes/office'); // Express setup\n\n\nconst app = express(); // support parsing of application/json type post data\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n})); // Express routing\n\napp.use('/', partyController);\napp.use('/', officeController);\nconst port = process.env.PORT || 3003;\nconst server = app.listen(port);\nmodule.exports = server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJwYXJ0eUNvbnRyb2xsZXIiLCJvZmZpY2VDb250cm9sbGVyIiwiYXBwIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCLEMsQ0FFQTs7O0FBQ0EsTUFBTUUsZUFBZSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBL0I7O0FBQ0EsTUFBTUcsZ0JBQWdCLEdBQUdILE9BQU8sQ0FBQyxvQkFBRCxDQUFoQyxDLENBRUE7OztBQUNBLE1BQU1JLEdBQUcsR0FBR0wsT0FBTyxFQUFuQixDLENBRUE7O0FBQ0FLLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixVQUFVLENBQUNLLElBQVgsRUFBUjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUUosVUFBVSxDQUFDTSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUdBOztBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWFILGVBQWI7QUFDQUUsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhRixnQkFBYjtBQUdBLE1BQU1NLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFDQSxNQUFNQyxNQUFNLEdBQUdULEdBQUcsQ0FBQ1UsTUFBSixDQUFXTCxJQUFYLENBQWY7QUFFQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVm9sdW1lcy9FeHRlbnNpb24vcHJvamVjdHMvcG9saXRpY28iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHRlcm5hbCBtb2R1bGVzXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5cbi8vIEludGVybmFsIG1vZHVsZXNcbmNvbnN0IHBhcnR5Q29udHJvbGxlciA9IHJlcXVpcmUoJy4vVjEvcm91dGVzL3BhcnR5Jyk7XG5jb25zdCBvZmZpY2VDb250cm9sbGVyID0gcmVxdWlyZSgnLi9WMS9yb3V0ZXMvb2ZmaWNlJyk7XG5cbi8vIEV4cHJlc3Mgc2V0dXBcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gc3VwcG9ydCBwYXJzaW5nIG9mIGFwcGxpY2F0aW9uL2pzb24gdHlwZSBwb3N0IGRhdGFcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuXG5cbi8vIEV4cHJlc3Mgcm91dGluZ1xuYXBwLnVzZSgnLycsIHBhcnR5Q29udHJvbGxlcik7XG5hcHAudXNlKCcvJywgb2ZmaWNlQ29udHJvbGxlcik7XG5cblxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMztcbmNvbnN0IHNlcnZlciA9IGFwcC5saXN0ZW4ocG9ydCk7XG5cbm1vZHVsZS5leHBvcnRzID0gc2VydmVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "partyController",
        "officeController",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "listen",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,oBAAD,CAAhC,C,CAEA;;;AACA,MAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;;AACAK,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACK,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACM,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAGA;;AACAJ,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaH,eAAb;AACAE,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,gBAAb;AAGA,MAAMM,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,MAAM,GAAGT,GAAG,CAACU,MAAJ,CAAWL,IAAX,CAAf;AAEAM,MAAM,CAACC,OAAP,GAAiBH,MAAjB",
      "sourceRoot": "/Volumes/Extension/projects/politico",
      "sourcesContent": [
        "// External modules\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\n// Internal modules\nconst partyController = require('./V1/routes/party');\nconst officeController = require('./V1/routes/office');\n\n// Express setup\nconst app = express();\n\n// support parsing of application/json type post data\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n\n// Express routing\napp.use('/', partyController);\napp.use('/', officeController);\n\n\nconst port = process.env.PORT || 3003;\nconst server = app.listen(port);\n\nmodule.exports = server;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1549735421703
  },
  "{\"sourceRoot\":\"/Volumes/Extension/projects/politico/V1/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Volumes/Extension/projects/politico\",\"filename\":\"/Volumes/Extension/projects/politico/V1/routes/party.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/Extension/projects/politico\",\"plugins\":[],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/Extension/projects/politico/V1/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Volumes/Extension/projects/politico",
      "filename": "/Volumes/Extension/projects/politico/V1/routes/party.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/Extension/projects/politico",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/Extension/projects/politico/V1/routes/party.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/Extension/projects/politico/V1/routes/party.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/Extension/projects/politico/V1/routes",
        "sourceFileName": "party.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst schema = require('../utils/schema');\n\nconst Parties = [{\n  id: 3,\n  name: 'AFDC',\n  hqAdress: 'adress',\n  logoUrl: 'logourl'\n}, {\n  id: 4,\n  name: 'AFDC',\n  hqAdress: 'adress',\n  logoUrl: 'logourl'\n}]; // Delete a specific party\n\nrouter.delete('/api/v1/parties/:id', (req, res) => {\n  const index = Parties.findIndex(item => {\n    return item.id === parseInt(req.params.id);\n  });\n\n  if (index >= 0) {\n    Parties.splice(index, 1);\n    res.status(200).json({\n      status: 200,\n      data: [{\n        message: 'The party was successfully deleted'\n      }]\n    });\n    return;\n  }\n\n  res.status(404).json({\n    status: 404,\n    error: 'Party not found'\n  });\n}); // Edit a specific party name\n\nrouter.patch('/api/v1/parties/:id/name', (req, res) => {\n  const nameSchema = schema({\n    name: 'string'\n  }, req.body);\n\n  if (nameSchema.passed === false) {\n    res.status(400).json({\n      status: 400,\n      error: nameSchema.message\n    });\n    return;\n  }\n\n  const item = Parties.find(item => {\n    return item.id === parseInt(req.params.id);\n  });\n\n  if (item) {\n    item.name = req.body.name;\n    res.status(200).json({\n      status: 200,\n      data: [{\n        id: item.id,\n        name: item.name\n      }]\n    });\n    return;\n  }\n\n  res.status(404).json({\n    status: 404,\n    error: 'Party not found'\n  });\n}); // Get all parties\n\nrouter.get('/api/v1/parties', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    data: Parties\n  });\n}); // Get a specific party\n\nrouter.get('/api/v1/parties/:id', (req, res) => {\n  const item = Parties.find(item => {\n    return item.id === parseInt(req.params.id);\n  });\n\n  if (!item) {\n    res.status(404).json({\n      status: 404,\n      error: 'Party not found'\n    });\n    return;\n  }\n\n  res.status(200).json({\n    status: 200,\n    data: [item]\n  });\n}); // Create a new party\n\nrouter.post('/api/v1/parties', (req, res) => {\n  // Validate the request\n  const partySchema = schema({\n    id: 'integer',\n    name: 'string',\n    hqAdress: 'string',\n    logoUrl: 'string'\n  }, req.body);\n\n  if (partySchema.passed === false) {\n    res.status(400).json({\n      status: 400,\n      error: partySchema.message\n    });\n    return;\n  } // Add new party\n\n\n  Parties.push(req.body);\n  res.status(200).json({\n    status: 200,\n    data: [{\n      id: req.body.id,\n      name: req.body.name\n    }]\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "party.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "schema",
        "Parties",
        "id",
        "name",
        "hqAdress",
        "logoUrl",
        "delete",
        "req",
        "res",
        "index",
        "findIndex",
        "item",
        "parseInt",
        "params",
        "splice",
        "status",
        "json",
        "data",
        "message",
        "error",
        "patch",
        "nameSchema",
        "body",
        "passed",
        "find",
        "get",
        "post",
        "partySchema",
        "push",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Volumes/Extension/projects/politico/V1/routes",
      "sourcesContent": [
        "const express = require('express');\n\nconst router = express.Router();\n\nconst schema = require('../utils/schema');\n\nconst Parties = [{\n  id: 3,\n  name: 'AFDC',\n  hqAdress: 'adress',\n  logoUrl: 'logourl'\n},\n{\n  id: 4,\n  name: 'AFDC',\n  hqAdress: 'adress',\n  logoUrl: 'logourl'\n}];\n\n// Delete a specific party\nrouter.delete('/api/v1/parties/:id', (req, res) => { \n\n  const index = Parties.findIndex((item) => { \n    return item.id === parseInt(req.params.id)\n  });\n\n  if(index >= 0){\n\n    Parties.splice(index, 1);\n\n      res.status(200).json({\n        status: 200,\n        data: [{\n          message: 'The party was successfully deleted',\n        }],\n      });\n       return;\n  }\n\n  res.status(404).json({\n    status: 404,\n    error: 'Party not found',\n  });\n\n});\n\n// Edit a specific party name\nrouter.patch('/api/v1/parties/:id/name', (req, res) => {\n\n  const nameSchema = schema({\n    name: 'string',\n  }, req.body);\n\n  if (nameSchema.passed === false) {\n    res.status(400).json({\n      status: 400,\n      error: nameSchema.message,\n    });\n    return;\n  }\n\n  const item = Parties.find((item) => { \n    return item.id === parseInt(req.params.id);\n  });\n\n  if(item){\n    item.name = req.body.name;\n\n      res.status(200).json({\n        status: 200,\n        data: [{\n          id: item.id,\n          name: item.name,\n        }],\n      });\n      return;\n  }\n\n  res.status(404).json({\n    status: 404,\n    error: 'Party not found',\n  });\n});\n\n// Get all parties\nrouter.get('/api/v1/parties', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    data: Parties,\n  });\n});\n\n// Get a specific party\nrouter.get('/api/v1/parties/:id', (req, res) => {\n\n  const item = Parties.find((item)=>{ \n    return item.id === parseInt(req.params.id);\n  });\n\n  if (!item) {\n    res.status(404).json({\n      status: 404,\n      error: 'Party not found',\n    });\n    return;\n  }\n\n  res.status(200).json({\n    status: 200,\n    data: [item],\n  });\n});\n\n// Create a new party\nrouter.post('/api/v1/parties', (req, res) => {\n\n  // Validate the request\n  const partySchema = schema({\n    id: 'integer',\n    name: 'string',\n    hqAdress: 'string',\n    logoUrl: 'string',\n  }, req.body);\n\n  if (partySchema.passed === false) {\n    res.status(400).json({\n      status: 400,\n      error: partySchema.message,\n    });\n    return;\n  }\n\n  // Add new party\n  Parties.push(req.body);\n\n  res.status(200).json({\n    status: 200,\n    data: [{\n      id: req.body.id,\n      name: req.body.name,\n    }],\n  });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1549735492448
  },
  "{\"sourceRoot\":\"/Volumes/Extension/projects/politico/V1/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Volumes/Extension/projects/politico\",\"filename\":\"/Volumes/Extension/projects/politico/V1/utils/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/Extension/projects/politico\",\"plugins\":[],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/Extension/projects/politico/V1/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Volumes/Extension/projects/politico",
      "filename": "/Volumes/Extension/projects/politico/V1/utils/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/Extension/projects/politico",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/Extension/projects/politico/V1/utils/schema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/Extension/projects/politico/V1/utils/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/Extension/projects/politico/V1/utils",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "/* eslint no-restricted-syntax: 0 */\n\n/* eslint guard-for-in: 0 */\nfunction schema(args, obj) {\n  // Checks if the property is defined\n  for (const arg in args) {\n    if (!obj[arg]) {\n      return {\n        passed: false,\n        message: `The ${arg} is undefined `\n      };\n    }\n  }\n\n  for (const arg in args) {\n    // When the type is an array\n    if (args[arg] === 'array') {\n      if (!(obj[arg] instanceof Array)) {\n        return {\n          passed: false,\n          message: `${arg} should be an Array `\n        };\n      }\n    } // When the schema requires an integer\n\n\n    if (args[arg] === 'integer') {\n      if (!Number.isInteger(obj[arg])) {\n        return {\n          passed: false,\n          message: `${arg} should be an integer `\n        };\n      }\n    } // When the type is a string\n\n\n    if (args[arg] === 'string') {\n      if (typeof obj[arg] !== 'string') {\n        return {\n          passed: false,\n          message: `${arg} should be a string `\n        };\n      }\n    } // When the type is a number\n    // if (args[arg] === 'number') {\n    //   if (typeof obj[arg] !== 'number') {\n    //     return {\n    //       passed: false,\n    //       message: `${arg} should be a number `,\n    //     };\n    //   }\n    // }\n    // When the type is a date\n    // if (args[arg] === 'date') {\n    //   if (!(obj[arg] instanceof Date)) {\n    //     return {\n    //       passed: false,\n    //       message: `${arg} should be a valid Date `,\n    //     };\n    //   }\n    // }\n    // When the type is an email\n    // if (args[arg] === 'email') {\n    //   if (!RegExp(/^[a-zA-Z-._]+@[a-zA-Z-._]+.[a-zA-Z]{2,4}$/).test(obj[arg].toString().toLowerCase())) {\n    //     return {\n    //       passed: false,\n    //       message: `${arg} should be a valid email adress `,\n    //     };\n    //   }\n    // }\n\n  }\n\n  return {\n    passed: true,\n    obj\n  };\n}\n\nmodule.exports = schema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJhcmdzIiwib2JqIiwiYXJnIiwicGFzc2VkIiwibWVzc2FnZSIsIkFycmF5IiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFFQSxTQUFTQSxNQUFULENBQWdCQyxJQUFoQixFQUFzQkMsR0FBdEIsRUFBMkI7QUFDekI7QUFDQSxPQUFLLE1BQU1DLEdBQVgsSUFBa0JGLElBQWxCLEVBQXdCO0FBQ3RCLFFBQUksQ0FBQ0MsR0FBRyxDQUFDQyxHQUFELENBQVIsRUFBZTtBQUNiLGFBQU87QUFDTEMsUUFBQUEsTUFBTSxFQUFFLEtBREg7QUFFTEMsUUFBQUEsT0FBTyxFQUFHLE9BQU1GLEdBQUk7QUFGZixPQUFQO0FBSUQ7QUFDRjs7QUFFRCxPQUFLLE1BQU1BLEdBQVgsSUFBa0JGLElBQWxCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUEsSUFBSSxDQUFDRSxHQUFELENBQUosS0FBYyxPQUFsQixFQUEyQjtBQUN6QixVQUFJLEVBQUVELEdBQUcsQ0FBQ0MsR0FBRCxDQUFILFlBQW9CRyxLQUF0QixDQUFKLEVBQWtDO0FBQ2hDLGVBQU87QUFDTEYsVUFBQUEsTUFBTSxFQUFFLEtBREg7QUFFTEMsVUFBQUEsT0FBTyxFQUFHLEdBQUVGLEdBQUk7QUFGWCxTQUFQO0FBSUQ7QUFDRixLQVRxQixDQVd0Qjs7O0FBQ0EsUUFBSUYsSUFBSSxDQUFDRSxHQUFELENBQUosS0FBYyxTQUFsQixFQUE2QjtBQUMzQixVQUFJLENBQUNJLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQk4sR0FBRyxDQUFDQyxHQUFELENBQXBCLENBQUwsRUFBaUM7QUFDL0IsZUFBTztBQUNMQyxVQUFBQSxNQUFNLEVBQUUsS0FESDtBQUVMQyxVQUFBQSxPQUFPLEVBQUcsR0FBRUYsR0FBSTtBQUZYLFNBQVA7QUFJRDtBQUNGLEtBbkJxQixDQXFCdEI7OztBQUNBLFFBQUlGLElBQUksQ0FBQ0UsR0FBRCxDQUFKLEtBQWMsUUFBbEIsRUFBNEI7QUFDMUIsVUFBSSxPQUFPRCxHQUFHLENBQUNDLEdBQUQsQ0FBVixLQUFvQixRQUF4QixFQUFrQztBQUNoQyxlQUFPO0FBQ0xDLFVBQUFBLE1BQU0sRUFBRSxLQURIO0FBRUxDLFVBQUFBLE9BQU8sRUFBRyxHQUFFRixHQUFJO0FBRlgsU0FBUDtBQUlEO0FBQ0YsS0E3QnFCLENBK0J0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUQ7O0FBRUQsU0FBTztBQUNMQyxJQUFBQSxNQUFNLEVBQUUsSUFESDtBQUVMRixJQUFBQTtBQUZLLEdBQVA7QUFJRDs7QUFFRE8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVm9sdW1lcy9FeHRlbnNpb24vcHJvamVjdHMvcG9saXRpY28vVjEvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tcmVzdHJpY3RlZC1zeW50YXg6IDAgKi9cbi8qIGVzbGludCBndWFyZC1mb3ItaW46IDAgKi9cblxuZnVuY3Rpb24gc2NoZW1hKGFyZ3MsIG9iaikge1xuICAvLyBDaGVja3MgaWYgdGhlIHByb3BlcnR5IGlzIGRlZmluZWRcbiAgZm9yIChjb25zdCBhcmcgaW4gYXJncykge1xuICAgIGlmICghb2JqW2FyZ10pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhc3NlZDogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6IGBUaGUgJHthcmd9IGlzIHVuZGVmaW5lZCBgLFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBmb3IgKGNvbnN0IGFyZyBpbiBhcmdzKSB7XG4gICAgLy8gV2hlbiB0aGUgdHlwZSBpcyBhbiBhcnJheVxuICAgIGlmIChhcmdzW2FyZ10gPT09ICdhcnJheScpIHtcbiAgICAgIGlmICghKG9ialthcmddIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGFzc2VkOiBmYWxzZSxcbiAgICAgICAgICBtZXNzYWdlOiBgJHthcmd9IHNob3VsZCBiZSBhbiBBcnJheSBgLFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFdoZW4gdGhlIHNjaGVtYSByZXF1aXJlcyBhbiBpbnRlZ2VyXG4gICAgaWYgKGFyZ3NbYXJnXSA9PT0gJ2ludGVnZXInKSB7XG4gICAgICBpZiAoIU51bWJlci5pc0ludGVnZXIob2JqW2FyZ10pKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGFzc2VkOiBmYWxzZSxcbiAgICAgICAgICBtZXNzYWdlOiBgJHthcmd9IHNob3VsZCBiZSBhbiBpbnRlZ2VyIGAsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gV2hlbiB0aGUgdHlwZSBpcyBhIHN0cmluZ1xuICAgIGlmIChhcmdzW2FyZ10gPT09ICdzdHJpbmcnKSB7XG4gICAgICBpZiAodHlwZW9mIG9ialthcmddICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBhc3NlZDogZmFsc2UsXG4gICAgICAgICAgbWVzc2FnZTogYCR7YXJnfSBzaG91bGQgYmUgYSBzdHJpbmcgYCxcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBXaGVuIHRoZSB0eXBlIGlzIGEgbnVtYmVyXG4gICAgLy8gaWYgKGFyZ3NbYXJnXSA9PT0gJ251bWJlcicpIHtcbiAgICAvLyAgIGlmICh0eXBlb2Ygb2JqW2FyZ10gIT09ICdudW1iZXInKSB7XG4gICAgLy8gICAgIHJldHVybiB7XG4gICAgLy8gICAgICAgcGFzc2VkOiBmYWxzZSxcbiAgICAvLyAgICAgICBtZXNzYWdlOiBgJHthcmd9IHNob3VsZCBiZSBhIG51bWJlciBgLFxuICAgIC8vICAgICB9O1xuICAgIC8vICAgfVxuICAgIC8vIH1cblxuICAgIC8vIFdoZW4gdGhlIHR5cGUgaXMgYSBkYXRlXG4gICAgLy8gaWYgKGFyZ3NbYXJnXSA9PT0gJ2RhdGUnKSB7XG4gICAgLy8gICBpZiAoIShvYmpbYXJnXSBpbnN0YW5jZW9mIERhdGUpKSB7XG4gICAgLy8gICAgIHJldHVybiB7XG4gICAgLy8gICAgICAgcGFzc2VkOiBmYWxzZSxcbiAgICAvLyAgICAgICBtZXNzYWdlOiBgJHthcmd9IHNob3VsZCBiZSBhIHZhbGlkIERhdGUgYCxcbiAgICAvLyAgICAgfTtcbiAgICAvLyAgIH1cbiAgICAvLyB9XG5cbiAgICAvLyBXaGVuIHRoZSB0eXBlIGlzIGFuIGVtYWlsXG4gICAgLy8gaWYgKGFyZ3NbYXJnXSA9PT0gJ2VtYWlsJykge1xuICAgIC8vICAgaWYgKCFSZWdFeHAoL15bYS16QS1aLS5fXStAW2EtekEtWi0uX10rLlthLXpBLVpdezIsNH0kLykudGVzdChvYmpbYXJnXS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgLy8gICAgIHJldHVybiB7XG4gICAgLy8gICAgICAgcGFzc2VkOiBmYWxzZSxcbiAgICAvLyAgICAgICBtZXNzYWdlOiBgJHthcmd9IHNob3VsZCBiZSBhIHZhbGlkIGVtYWlsIGFkcmVzcyBgLFxuICAgIC8vICAgICB9O1xuICAgIC8vICAgfVxuICAgIC8vIH1cblxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXNzZWQ6IHRydWUsXG4gICAgb2JqLFxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNjaGVtYTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "args",
        "obj",
        "arg",
        "passed",
        "message",
        "Array",
        "Number",
        "isInteger",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA;AAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AACzB;AACA,OAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtB,QAAI,CAACC,GAAG,CAACC,GAAD,CAAR,EAAe;AACb,aAAO;AACLC,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,OAAO,EAAG,OAAMF,GAAI;AAFf,OAAP;AAID;AACF;;AAED,OAAK,MAAMA,GAAX,IAAkBF,IAAlB,EAAwB;AACtB;AACA,QAAIA,IAAI,CAACE,GAAD,CAAJ,KAAc,OAAlB,EAA2B;AACzB,UAAI,EAAED,GAAG,CAACC,GAAD,CAAH,YAAoBG,KAAtB,CAAJ,EAAkC;AAChC,eAAO;AACLF,UAAAA,MAAM,EAAE,KADH;AAELC,UAAAA,OAAO,EAAG,GAAEF,GAAI;AAFX,SAAP;AAID;AACF,KATqB,CAWtB;;;AACA,QAAIF,IAAI,CAACE,GAAD,CAAJ,KAAc,SAAlB,EAA6B;AAC3B,UAAI,CAACI,MAAM,CAACC,SAAP,CAAiBN,GAAG,CAACC,GAAD,CAApB,CAAL,EAAiC;AAC/B,eAAO;AACLC,UAAAA,MAAM,EAAE,KADH;AAELC,UAAAA,OAAO,EAAG,GAAEF,GAAI;AAFX,SAAP;AAID;AACF,KAnBqB,CAqBtB;;;AACA,QAAIF,IAAI,CAACE,GAAD,CAAJ,KAAc,QAAlB,EAA4B;AAC1B,UAAI,OAAOD,GAAG,CAACC,GAAD,CAAV,KAAoB,QAAxB,EAAkC;AAChC,eAAO;AACLC,UAAAA,MAAM,EAAE,KADH;AAELC,UAAAA,OAAO,EAAG,GAAEF,GAAI;AAFX,SAAP;AAID;AACF,KA7BqB,CA+BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAED;;AAED,SAAO;AACLC,IAAAA,MAAM,EAAE,IADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAEDO,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "/Volumes/Extension/projects/politico/V1/utils",
      "sourcesContent": [
        "/* eslint no-restricted-syntax: 0 */\n/* eslint guard-for-in: 0 */\n\nfunction schema(args, obj) {\n  // Checks if the property is defined\n  for (const arg in args) {\n    if (!obj[arg]) {\n      return {\n        passed: false,\n        message: `The ${arg} is undefined `,\n      };\n    }\n  }\n\n  for (const arg in args) {\n    // When the type is an array\n    if (args[arg] === 'array') {\n      if (!(obj[arg] instanceof Array)) {\n        return {\n          passed: false,\n          message: `${arg} should be an Array `,\n        };\n      }\n    }\n\n    // When the schema requires an integer\n    if (args[arg] === 'integer') {\n      if (!Number.isInteger(obj[arg])) {\n        return {\n          passed: false,\n          message: `${arg} should be an integer `,\n        };\n      }\n    }\n\n    // When the type is a string\n    if (args[arg] === 'string') {\n      if (typeof obj[arg] !== 'string') {\n        return {\n          passed: false,\n          message: `${arg} should be a string `,\n        };\n      }\n    }\n\n    // When the type is a number\n    // if (args[arg] === 'number') {\n    //   if (typeof obj[arg] !== 'number') {\n    //     return {\n    //       passed: false,\n    //       message: `${arg} should be a number `,\n    //     };\n    //   }\n    // }\n\n    // When the type is a date\n    // if (args[arg] === 'date') {\n    //   if (!(obj[arg] instanceof Date)) {\n    //     return {\n    //       passed: false,\n    //       message: `${arg} should be a valid Date `,\n    //     };\n    //   }\n    // }\n\n    // When the type is an email\n    // if (args[arg] === 'email') {\n    //   if (!RegExp(/^[a-zA-Z-._]+@[a-zA-Z-._]+.[a-zA-Z]{2,4}$/).test(obj[arg].toString().toLowerCase())) {\n    //     return {\n    //       passed: false,\n    //       message: `${arg} should be a valid email adress `,\n    //     };\n    //   }\n    // }\n\n  }\n\n  return {\n    passed: true,\n    obj,\n  };\n}\n\nmodule.exports = schema;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1549735492450
  },
  "{\"sourceRoot\":\"/Volumes/Extension/projects/politico/V1/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Volumes/Extension/projects/politico\",\"filename\":\"/Volumes/Extension/projects/politico/V1/routes/office.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/Extension/projects/politico\",\"plugins\":[],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/Extension/projects/politico/V1/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Volumes/Extension/projects/politico",
      "filename": "/Volumes/Extension/projects/politico/V1/routes/office.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/Extension/projects/politico",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/Extension/projects/politico/V1/routes/office.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/Extension/projects/politico/V1/routes/office.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/Extension/projects/politico/V1/routes",
        "sourceFileName": "office.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst schema = require('../utils/schema');\n\nconst Offices = []; // Get a specific office\n\nrouter.get('/api/v1/offices/:id', (req, res) => {\n  let office;\n  Offices.forEach(o => {\n    if (o.id === req.params.id) {\n      office = o;\n    }\n  });\n\n  if (office === undefined) {\n    res.status(404).json({\n      status: 404,\n      error: 'office not found'\n    });\n  }\n}); // Get all offices\n\nrouter.get('/api/v1/offices', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    data: Offices\n  });\n}); // Create an office\n\nrouter.post('/api/v1/offices', (req, res) => {\n  const officeSchema = schema({\n    id: 'integer',\n    type: 'string',\n    name: 'string'\n  }, req.body);\n\n  if (officeSchema.passed === false) {\n    res.status(400).json({\n      status: 400,\n      error: officeSchema.message\n    });\n    return;\n  }\n\n  Offices.push(req.body);\n  res.status(200).json({\n    status: 200,\n    data: [req.body]\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9mZmljZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInNjaGVtYSIsIk9mZmljZXMiLCJnZXQiLCJyZXEiLCJyZXMiLCJvZmZpY2UiLCJmb3JFYWNoIiwibyIsImlkIiwicGFyYW1zIiwidW5kZWZpbmVkIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiZGF0YSIsInBvc3QiLCJvZmZpY2VTY2hlbWEiLCJ0eXBlIiwibmFtZSIsImJvZHkiLCJwYXNzZWQiLCJtZXNzYWdlIiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUF0Qjs7QUFFQSxNQUFNSSxPQUFPLEdBQUcsRUFBaEIsQyxDQUVBOztBQUNBSCxNQUFNLENBQUNJLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM5QyxNQUFJQyxNQUFKO0FBRUFKLEVBQUFBLE9BQU8sQ0FBQ0ssT0FBUixDQUFpQkMsQ0FBRCxJQUFPO0FBQ3JCLFFBQUlBLENBQUMsQ0FBQ0MsRUFBRixLQUFTTCxHQUFHLENBQUNNLE1BQUosQ0FBV0QsRUFBeEIsRUFBNEI7QUFDMUJILE1BQUFBLE1BQU0sR0FBR0UsQ0FBVDtBQUNEO0FBQ0YsR0FKRDs7QUFNQSxNQUFJRixNQUFNLEtBQUtLLFNBQWYsRUFBMEI7QUFDeEJOLElBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CRCxNQUFBQSxNQUFNLEVBQUUsR0FEVztBQUVuQkUsTUFBQUEsS0FBSyxFQUFFO0FBRlksS0FBckI7QUFJRDtBQUNGLENBZkQsRSxDQWlCQTs7QUFDQWYsTUFBTSxDQUFDSSxHQUFQLENBQVcsaUJBQVgsRUFBOEIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDMUNBLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CRCxJQUFBQSxNQUFNLEVBQUUsR0FEVztBQUVuQkcsSUFBQUEsSUFBSSxFQUFFYjtBQUZhLEdBQXJCO0FBSUQsQ0FMRCxFLENBT0E7O0FBQ0FILE1BQU0sQ0FBQ2lCLElBQVAsQ0FBWSxpQkFBWixFQUErQixDQUFDWixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMzQyxRQUFNWSxZQUFZLEdBQUdoQixNQUFNLENBQUM7QUFDMUJRLElBQUFBLEVBQUUsRUFBRSxTQURzQjtBQUUxQlMsSUFBQUEsSUFBSSxFQUFFLFFBRm9CO0FBRzFCQyxJQUFBQSxJQUFJLEVBQUU7QUFIb0IsR0FBRCxFQUl4QmYsR0FBRyxDQUFDZ0IsSUFKb0IsQ0FBM0I7O0FBTUEsTUFBSUgsWUFBWSxDQUFDSSxNQUFiLEtBQXdCLEtBQTVCLEVBQW1DO0FBQ2pDaEIsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJELE1BQUFBLE1BQU0sRUFBRSxHQURXO0FBRW5CRSxNQUFBQSxLQUFLLEVBQUVHLFlBQVksQ0FBQ0s7QUFGRCxLQUFyQjtBQUlBO0FBQ0Q7O0FBRURwQixFQUFBQSxPQUFPLENBQUNxQixJQUFSLENBQWFuQixHQUFHLENBQUNnQixJQUFqQjtBQUVBZixFQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkQsSUFBQUEsTUFBTSxFQUFFLEdBRFc7QUFFbkJHLElBQUFBLElBQUksRUFBRSxDQUFDWCxHQUFHLENBQUNnQixJQUFMO0FBRmEsR0FBckI7QUFJRCxDQXJCRDtBQXVCQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCMUIsTUFBakIiLCJzb3VyY2VSb290IjoiL1ZvbHVtZXMvRXh0ZW5zaW9uL3Byb2plY3RzL3BvbGl0aWNvL1YxL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IHNjaGVtYSA9IHJlcXVpcmUoJy4uL3V0aWxzL3NjaGVtYScpO1xuXG5jb25zdCBPZmZpY2VzID0gW107XG5cbi8vIEdldCBhIHNwZWNpZmljIG9mZmljZVxucm91dGVyLmdldCgnL2FwaS92MS9vZmZpY2VzLzppZCcsIChyZXEsIHJlcykgPT4ge1xuICBsZXQgb2ZmaWNlO1xuXG4gIE9mZmljZXMuZm9yRWFjaCgobykgPT4ge1xuICAgIGlmIChvLmlkID09PSByZXEucGFyYW1zLmlkKSB7XG4gICAgICBvZmZpY2UgPSBvO1xuICAgIH1cbiAgfSk7XG5cbiAgaWYgKG9mZmljZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgc3RhdHVzOiA0MDQsXG4gICAgICBlcnJvcjogJ29mZmljZSBub3QgZm91bmQnLFxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gR2V0IGFsbCBvZmZpY2VzXG5yb3V0ZXIuZ2V0KCcvYXBpL3YxL29mZmljZXMnLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgIHN0YXR1czogMjAwLFxuICAgIGRhdGE6IE9mZmljZXMsXG4gIH0pO1xufSk7XG5cbi8vIENyZWF0ZSBhbiBvZmZpY2VcbnJvdXRlci5wb3N0KCcvYXBpL3YxL29mZmljZXMnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qgb2ZmaWNlU2NoZW1hID0gc2NoZW1hKHtcbiAgICBpZDogJ2ludGVnZXInLFxuICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgIG5hbWU6ICdzdHJpbmcnLFxuICB9LCByZXEuYm9keSk7XG5cbiAgaWYgKG9mZmljZVNjaGVtYS5wYXNzZWQgPT09IGZhbHNlKSB7XG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICBlcnJvcjogb2ZmaWNlU2NoZW1hLm1lc3NhZ2UsXG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgT2ZmaWNlcy5wdXNoKHJlcS5ib2R5KTtcblxuICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgc3RhdHVzOiAyMDAsXG4gICAgZGF0YTogW3JlcS5ib2R5XSxcbiAgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "office.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "schema",
        "Offices",
        "get",
        "req",
        "res",
        "office",
        "forEach",
        "o",
        "id",
        "params",
        "undefined",
        "status",
        "json",
        "error",
        "data",
        "post",
        "officeSchema",
        "type",
        "name",
        "body",
        "passed",
        "message",
        "push",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAAtB;;AAEA,MAAMI,OAAO,GAAG,EAAhB,C,CAEA;;AACAH,MAAM,CAACI,GAAP,CAAW,qBAAX,EAAkC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9C,MAAIC,MAAJ;AAEAJ,EAAAA,OAAO,CAACK,OAAR,CAAiBC,CAAD,IAAO;AACrB,QAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACM,MAAJ,CAAWD,EAAxB,EAA4B;AAC1BH,MAAAA,MAAM,GAAGE,CAAT;AACD;AACF,GAJD;;AAMA,MAAIF,MAAM,KAAKK,SAAf,EAA0B;AACxBN,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBE,MAAAA,KAAK,EAAE;AAFY,KAArB;AAID;AACF,CAfD,E,CAiBA;;AACAf,MAAM,CAACI,GAAP,CAAW,iBAAX,EAA8B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1CA,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBG,IAAAA,IAAI,EAAEb;AAFa,GAArB;AAID,CALD,E,CAOA;;AACAH,MAAM,CAACiB,IAAP,CAAY,iBAAZ,EAA+B,CAACZ,GAAD,EAAMC,GAAN,KAAc;AAC3C,QAAMY,YAAY,GAAGhB,MAAM,CAAC;AAC1BQ,IAAAA,EAAE,EAAE,SADsB;AAE1BS,IAAAA,IAAI,EAAE,QAFoB;AAG1BC,IAAAA,IAAI,EAAE;AAHoB,GAAD,EAIxBf,GAAG,CAACgB,IAJoB,CAA3B;;AAMA,MAAIH,YAAY,CAACI,MAAb,KAAwB,KAA5B,EAAmC;AACjChB,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBE,MAAAA,KAAK,EAAEG,YAAY,CAACK;AAFD,KAArB;AAIA;AACD;;AAEDpB,EAAAA,OAAO,CAACqB,IAAR,CAAanB,GAAG,CAACgB,IAAjB;AAEAf,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBG,IAAAA,IAAI,EAAE,CAACX,GAAG,CAACgB,IAAL;AAFa,GAArB;AAID,CArBD;AAuBAI,MAAM,CAACC,OAAP,GAAiB1B,MAAjB",
      "sourceRoot": "/Volumes/Extension/projects/politico/V1/routes",
      "sourcesContent": [
        "const express = require('express');\n\nconst router = express.Router();\n\nconst schema = require('../utils/schema');\n\nconst Offices = [];\n\n// Get a specific office\nrouter.get('/api/v1/offices/:id', (req, res) => {\n  let office;\n\n  Offices.forEach((o) => {\n    if (o.id === req.params.id) {\n      office = o;\n    }\n  });\n\n  if (office === undefined) {\n    res.status(404).json({\n      status: 404,\n      error: 'office not found',\n    });\n  }\n});\n\n// Get all offices\nrouter.get('/api/v1/offices', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    data: Offices,\n  });\n});\n\n// Create an office\nrouter.post('/api/v1/offices', (req, res) => {\n  const officeSchema = schema({\n    id: 'integer',\n    type: 'string',\n    name: 'string',\n  }, req.body);\n\n  if (officeSchema.passed === false) {\n    res.status(400).json({\n      status: 400,\n      error: officeSchema.message,\n    });\n    return;\n  }\n\n  Offices.push(req.body);\n\n  res.status(200).json({\n    status: 200,\n    data: [req.body],\n  });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1549735421698
  }
}